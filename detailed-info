-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from src/Miranda/Parser.y
-----------------------------------------------------------------------------

state 31 contains 6 reduce/reduce conflicts.
state 40 contains 1 shift/reduce conflicts.
state 50 contains 10 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 60 contains 10 shift/reduce conflicts and 1 reduce/reduce conflicts.

rule 50 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	%start_defParser -> def                            (1)
	%start_expParser -> exp                            (2)
	program -> '{' stmts '}'                           (3)
	stmts -> stmts ';' stmt                            (4)
	stmts -> stmt                                      (5)
	stmt -> exp '::=' constructors                     (6)
	stmt -> exp '=' exp                                (7)
	stmt -> exp                                        (8)
	def -> exp '::=' constructors                      (9)
	def -> exp '=' exp                                 (10)
	constructors -> constructors '|' constructor       (11)
	constructors -> constructor                        (12)
	constructor -> constr constrTypes                  (13)
	constrTypes -> constrTypes constrArg               (14)
	constrTypes ->                                     (15)
	constrArg -> var                                   (16)
	constrArg -> genTypeVar                            (17)
	constrArg -> '(' constrArgs ')'                    (18)
	constrArgs -> constrArgs constrArg                 (19)
	constrArgs ->                                      (20)
	genTypeVar -> mult                                 (21)
	genTypeVar -> gtype_2plus                          (22)
	exp -> apply                                       (23)
	exp -> infixApp                                    (24)
	exp -> specialLit                                  (25)
	exp -> term                                        (26)
	apply -> exp term                                  (27)
	infixApp -> exp infixOp exp                        (28)
	infixOp -> plus                                    (29)
	infixOp -> minus                                   (30)
	infixOp -> mult                                    (31)
	infixOp -> div                                     (32)
	infixOp -> infix_var                               (33)
	term -> variable                                   (34)
	term -> genTypeVar                                 (35)
	term -> constr                                     (36)
	term -> constant                                   (37)
	term -> '(' exp ')'                                (38)
	variable -> var                                    (39)
	constant -> const                                  (40)
	specialLit -> listLit                              (41)
	specialLit -> listColonLit                         (42)
	specialLit -> tupleLit                             (43)
	listLit -> '[' ']'                                 (44)
	listLit -> '[' commaSepExp ']'                     (45)
	listColonLit -> colonSepExp ':' exp                (46)
	tupleLit -> '(' commaSepExp ')'                    (47)
	commaSepExp -> commaSepExp ',' exp                 (48)
	commaSepExp -> exp                                 (49)
	colonSepExp -> colonSepExp ':' exp                 (50)
	colonSepExp -> exp                                 (51)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	const          { T.Constant $$ }
	constr         { T.Constructor $$ }
	var            { T.Variable $$ }
	plus           { T.InfixOp T.IPlus }
	minus          { T.InfixOp T.IMinus }
	mult           { T.InfixOp T.IMult }
	div            { T.InfixOp T.IDiv }
	infix_var      { T.InfixOp (T.IVar _) }
	gtype_2plus    { T.GenTypeVar $$ }
	'='            { T.Equal }
	'::='          { T.TypeEq }
	'('            { T.LP }
	')'            { T.RP }
	'['            { T.LB }
	']'            { T.RB }
	';'            { T.Semi }
	','            { T.Comma }
	':'            { T.Colon }
	'{'            { T.LC }
	'}'            { T.RC }
	'|'            { T.VertBar }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	%start_defParser rule  1
	%start_expParser rule  2
	program         rule  3
	stmts           rules 4, 5
	stmt            rules 6, 7, 8
	def             rules 9, 10
	constructors    rules 11, 12
	constructor     rule  13
	constrTypes     rules 14, 15
	constrArg       rules 16, 17, 18
	constrArgs      rules 19, 20
	genTypeVar      rules 21, 22
	exp             rules 23, 24, 25, 26
	apply           rule  27
	infixApp        rule  28
	infixOp         rules 29, 30, 31, 32, 33
	term            rules 34, 35, 36, 37, 38
	variable        rule  39
	constant        rule  40
	specialLit      rules 41, 42, 43
	listLit         rules 44, 45
	listColonLit    rule  46
	tupleLit        rule  47
	commaSepExp     rules 48, 49
	colonSepExp     rules 50, 51

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'{'            shift, and enter state 4

	program        goto state 26

State 1


	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	def            goto state 24
	genTypeVar     goto state 5
	exp            goto state 25
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	colonSepExp    goto state 16

State 2


	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	genTypeVar     goto state 5
	exp            goto state 6
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	colonSepExp    goto state 16

State 3


	'{'            shift, and enter state 4


State 4

	program -> '{' . stmts '}'                          (rule 3)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	stmts          goto state 43
	stmt           goto state 44
	genTypeVar     goto state 5
	exp            goto state 45
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	colonSepExp    goto state 16

State 5

	term -> genTypeVar .                                (rule 35)

	const          reduce using rule 35
	constr         reduce using rule 35
	var            reduce using rule 35
	plus           reduce using rule 35
	minus          reduce using rule 35
	mult           reduce using rule 35
	div            reduce using rule 35
	infix_var      reduce using rule 35
	gtype_2plus    reduce using rule 35
	'='            reduce using rule 35
	'::='          reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	']'            reduce using rule 35
	';'            reduce using rule 35
	','            reduce using rule 35
	':'            reduce using rule 35
	'}'            reduce using rule 35
	%eof           reduce using rule 35


State 6

	%start_expParser -> exp .                           (rule 2)
	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	plus           shift, and enter state 29
	minus          shift, and enter state 30
	mult           shift, and enter state 31
	div            shift, and enter state 32
	infix_var      shift, and enter state 33
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 36
	':'            reduce using rule 51
	%eof           accept

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 7

	exp -> apply .                                      (rule 23)

	const          reduce using rule 23
	constr         reduce using rule 23
	var            reduce using rule 23
	plus           reduce using rule 23
	minus          reduce using rule 23
	mult           reduce using rule 23
	div            reduce using rule 23
	infix_var      reduce using rule 23
	gtype_2plus    reduce using rule 23
	'='            reduce using rule 23
	'::='          reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	']'            reduce using rule 23
	';'            reduce using rule 23
	','            reduce using rule 23
	':'            reduce using rule 23
	'}'            reduce using rule 23
	%eof           reduce using rule 23


State 8

	exp -> infixApp .                                   (rule 24)

	const          reduce using rule 24
	constr         reduce using rule 24
	var            reduce using rule 24
	plus           reduce using rule 24
	minus          reduce using rule 24
	mult           reduce using rule 24
	div            reduce using rule 24
	infix_var      reduce using rule 24
	gtype_2plus    reduce using rule 24
	'='            reduce using rule 24
	'::='          reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	']'            reduce using rule 24
	';'            reduce using rule 24
	','            reduce using rule 24
	':'            reduce using rule 24
	'}'            reduce using rule 24
	%eof           reduce using rule 24


State 9

	exp -> term .                                       (rule 26)

	const          reduce using rule 26
	constr         reduce using rule 26
	var            reduce using rule 26
	plus           reduce using rule 26
	minus          reduce using rule 26
	mult           reduce using rule 26
	div            reduce using rule 26
	infix_var      reduce using rule 26
	gtype_2plus    reduce using rule 26
	'='            reduce using rule 26
	'::='          reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	']'            reduce using rule 26
	';'            reduce using rule 26
	','            reduce using rule 26
	':'            reduce using rule 26
	'}'            reduce using rule 26
	%eof           reduce using rule 26


State 10

	term -> variable .                                  (rule 34)

	const          reduce using rule 34
	constr         reduce using rule 34
	var            reduce using rule 34
	plus           reduce using rule 34
	minus          reduce using rule 34
	mult           reduce using rule 34
	div            reduce using rule 34
	infix_var      reduce using rule 34
	gtype_2plus    reduce using rule 34
	'='            reduce using rule 34
	'::='          reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	']'            reduce using rule 34
	';'            reduce using rule 34
	','            reduce using rule 34
	':'            reduce using rule 34
	'}'            reduce using rule 34
	%eof           reduce using rule 34


State 11

	term -> constant .                                  (rule 37)

	const          reduce using rule 37
	constr         reduce using rule 37
	var            reduce using rule 37
	plus           reduce using rule 37
	minus          reduce using rule 37
	mult           reduce using rule 37
	div            reduce using rule 37
	infix_var      reduce using rule 37
	gtype_2plus    reduce using rule 37
	'='            reduce using rule 37
	'::='          reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	']'            reduce using rule 37
	';'            reduce using rule 37
	','            reduce using rule 37
	':'            reduce using rule 37
	'}'            reduce using rule 37
	%eof           reduce using rule 37


State 12

	exp -> specialLit .                                 (rule 25)

	const          reduce using rule 25
	constr         reduce using rule 25
	var            reduce using rule 25
	plus           reduce using rule 25
	minus          reduce using rule 25
	mult           reduce using rule 25
	div            reduce using rule 25
	infix_var      reduce using rule 25
	gtype_2plus    reduce using rule 25
	'='            reduce using rule 25
	'::='          reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	']'            reduce using rule 25
	';'            reduce using rule 25
	','            reduce using rule 25
	':'            reduce using rule 25
	'}'            reduce using rule 25
	%eof           reduce using rule 25


State 13

	specialLit -> listLit .                             (rule 41)

	const          reduce using rule 41
	constr         reduce using rule 41
	var            reduce using rule 41
	plus           reduce using rule 41
	minus          reduce using rule 41
	mult           reduce using rule 41
	div            reduce using rule 41
	infix_var      reduce using rule 41
	gtype_2plus    reduce using rule 41
	'='            reduce using rule 41
	'::='          reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	']'            reduce using rule 41
	';'            reduce using rule 41
	','            reduce using rule 41
	':'            reduce using rule 41
	'}'            reduce using rule 41
	%eof           reduce using rule 41


State 14

	specialLit -> listColonLit .                        (rule 42)

	const          reduce using rule 42
	constr         reduce using rule 42
	var            reduce using rule 42
	plus           reduce using rule 42
	minus          reduce using rule 42
	mult           reduce using rule 42
	div            reduce using rule 42
	infix_var      reduce using rule 42
	gtype_2plus    reduce using rule 42
	'='            reduce using rule 42
	'::='          reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	']'            reduce using rule 42
	';'            reduce using rule 42
	','            reduce using rule 42
	':'            reduce using rule 42
	'}'            reduce using rule 42
	%eof           reduce using rule 42


State 15

	specialLit -> tupleLit .                            (rule 43)

	const          reduce using rule 43
	constr         reduce using rule 43
	var            reduce using rule 43
	plus           reduce using rule 43
	minus          reduce using rule 43
	mult           reduce using rule 43
	div            reduce using rule 43
	infix_var      reduce using rule 43
	gtype_2plus    reduce using rule 43
	'='            reduce using rule 43
	'::='          reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	']'            reduce using rule 43
	';'            reduce using rule 43
	','            reduce using rule 43
	':'            reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 16

	listColonLit -> colonSepExp . ':' exp               (rule 46)
	colonSepExp -> colonSepExp . ':' exp                (rule 50)

	':'            shift, and enter state 42


State 17

	constant -> const .                                 (rule 40)

	const          reduce using rule 40
	constr         reduce using rule 40
	var            reduce using rule 40
	plus           reduce using rule 40
	minus          reduce using rule 40
	mult           reduce using rule 40
	div            reduce using rule 40
	infix_var      reduce using rule 40
	gtype_2plus    reduce using rule 40
	'='            reduce using rule 40
	'::='          reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	']'            reduce using rule 40
	';'            reduce using rule 40
	','            reduce using rule 40
	':'            reduce using rule 40
	'}'            reduce using rule 40
	%eof           reduce using rule 40


State 18

	term -> constr .                                    (rule 36)

	const          reduce using rule 36
	constr         reduce using rule 36
	var            reduce using rule 36
	plus           reduce using rule 36
	minus          reduce using rule 36
	mult           reduce using rule 36
	div            reduce using rule 36
	infix_var      reduce using rule 36
	gtype_2plus    reduce using rule 36
	'='            reduce using rule 36
	'::='          reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	']'            reduce using rule 36
	';'            reduce using rule 36
	','            reduce using rule 36
	':'            reduce using rule 36
	'}'            reduce using rule 36
	%eof           reduce using rule 36


State 19

	variable -> var .                                   (rule 39)

	const          reduce using rule 39
	constr         reduce using rule 39
	var            reduce using rule 39
	plus           reduce using rule 39
	minus          reduce using rule 39
	mult           reduce using rule 39
	div            reduce using rule 39
	infix_var      reduce using rule 39
	gtype_2plus    reduce using rule 39
	'='            reduce using rule 39
	'::='          reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	']'            reduce using rule 39
	';'            reduce using rule 39
	','            reduce using rule 39
	':'            reduce using rule 39
	'}'            reduce using rule 39
	%eof           reduce using rule 39


State 20

	genTypeVar -> mult .                                (rule 21)

	const          reduce using rule 21
	constr         reduce using rule 21
	var            reduce using rule 21
	plus           reduce using rule 21
	minus          reduce using rule 21
	mult           reduce using rule 21
	div            reduce using rule 21
	infix_var      reduce using rule 21
	gtype_2plus    reduce using rule 21
	'='            reduce using rule 21
	'::='          reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	']'            reduce using rule 21
	';'            reduce using rule 21
	','            reduce using rule 21
	':'            reduce using rule 21
	'}'            reduce using rule 21
	'|'            reduce using rule 21
	%eof           reduce using rule 21


State 21

	genTypeVar -> gtype_2plus .                         (rule 22)

	const          reduce using rule 22
	constr         reduce using rule 22
	var            reduce using rule 22
	plus           reduce using rule 22
	minus          reduce using rule 22
	mult           reduce using rule 22
	div            reduce using rule 22
	infix_var      reduce using rule 22
	gtype_2plus    reduce using rule 22
	'='            reduce using rule 22
	'::='          reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	']'            reduce using rule 22
	';'            reduce using rule 22
	','            reduce using rule 22
	':'            reduce using rule 22
	'}'            reduce using rule 22
	'|'            reduce using rule 22
	%eof           reduce using rule 22


State 22

	term -> '(' . exp ')'                               (rule 38)
	tupleLit -> '(' . commaSepExp ')'                   (rule 47)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	genTypeVar     goto state 5
	exp            goto state 40
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	commaSepExp    goto state 41
	colonSepExp    goto state 16

State 23

	listLit -> '[' . ']'                                (rule 44)
	listLit -> '[' . commaSepExp ']'                    (rule 45)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23
	']'            shift, and enter state 39

	genTypeVar     goto state 5
	exp            goto state 37
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	commaSepExp    goto state 38
	colonSepExp    goto state 16

State 24

	%start_defParser -> def .                           (rule 1)

	%eof           accept


State 25

	def -> exp . '::=' constructors                     (rule 9)
	def -> exp . '=' exp                                (rule 10)
	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	plus           shift, and enter state 29
	minus          shift, and enter state 30
	mult           shift, and enter state 31
	div            shift, and enter state 32
	infix_var      shift, and enter state 33
	gtype_2plus    shift, and enter state 21
	'='            shift, and enter state 34
	'::='          shift, and enter state 35
	'('            shift, and enter state 36
	':'            reduce using rule 51

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 26

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 27

	infixApp -> exp infixOp . exp                       (rule 28)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	genTypeVar     goto state 5
	exp            goto state 60
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	colonSepExp    goto state 16

State 28

	apply -> exp term .                                 (rule 27)

	const          reduce using rule 27
	constr         reduce using rule 27
	var            reduce using rule 27
	plus           reduce using rule 27
	minus          reduce using rule 27
	mult           reduce using rule 27
	div            reduce using rule 27
	infix_var      reduce using rule 27
	gtype_2plus    reduce using rule 27
	'='            reduce using rule 27
	'::='          reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	']'            reduce using rule 27
	';'            reduce using rule 27
	','            reduce using rule 27
	':'            reduce using rule 27
	'}'            reduce using rule 27
	%eof           reduce using rule 27


State 29

	infixOp -> plus .                                   (rule 29)

	const          reduce using rule 29
	constr         reduce using rule 29
	var            reduce using rule 29
	mult           reduce using rule 29
	gtype_2plus    reduce using rule 29
	'('            reduce using rule 29
	'['            reduce using rule 29


State 30

	infixOp -> minus .                                  (rule 30)

	const          reduce using rule 30
	constr         reduce using rule 30
	var            reduce using rule 30
	mult           reduce using rule 30
	gtype_2plus    reduce using rule 30
	'('            reduce using rule 30
	'['            reduce using rule 30


State 31

	genTypeVar -> mult .                                (rule 21)
	infixOp -> mult .                                   (rule 31)

	const          reduce using rule 31
			(reduce using rule 21)

	constr         reduce using rule 31
			(reduce using rule 21)

	var            reduce using rule 31
			(reduce using rule 21)

	plus           reduce using rule 21
	minus          reduce using rule 21
	mult           reduce using rule 31
			(reduce using rule 21)

	div            reduce using rule 21
	infix_var      reduce using rule 21
	gtype_2plus    reduce using rule 31
			(reduce using rule 21)

	'='            reduce using rule 21
	'::='          reduce using rule 21
	'('            reduce using rule 31
			(reduce using rule 21)

	')'            reduce using rule 21
	'['            reduce using rule 31
	']'            reduce using rule 21
	';'            reduce using rule 21
	','            reduce using rule 21
	':'            reduce using rule 21
	'}'            reduce using rule 21
	%eof           reduce using rule 21


State 32

	infixOp -> div .                                    (rule 32)

	const          reduce using rule 32
	constr         reduce using rule 32
	var            reduce using rule 32
	mult           reduce using rule 32
	gtype_2plus    reduce using rule 32
	'('            reduce using rule 32
	'['            reduce using rule 32


State 33

	infixOp -> infix_var .                              (rule 33)

	const          reduce using rule 33
	constr         reduce using rule 33
	var            reduce using rule 33
	mult           reduce using rule 33
	gtype_2plus    reduce using rule 33
	'('            reduce using rule 33
	'['            reduce using rule 33


State 34

	def -> exp '=' . exp                                (rule 10)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	genTypeVar     goto state 5
	exp            goto state 59
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	colonSepExp    goto state 16

State 35

	def -> exp '::=' . constructors                     (rule 9)

	constr         shift, and enter state 58

	constructors   goto state 56
	constructor    goto state 57

State 36

	term -> '(' . exp ')'                               (rule 38)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	genTypeVar     goto state 5
	exp            goto state 55
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	colonSepExp    goto state 16

State 37

	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	commaSepExp -> exp .                                (rule 49)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	plus           shift, and enter state 29
	minus          shift, and enter state 30
	mult           shift, and enter state 31
	div            shift, and enter state 32
	infix_var      shift, and enter state 33
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 36
	']'            reduce using rule 49
	','            reduce using rule 49
	':'            reduce using rule 51

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 38

	listLit -> '[' commaSepExp . ']'                    (rule 45)
	commaSepExp -> commaSepExp . ',' exp                (rule 48)

	']'            shift, and enter state 54
	','            shift, and enter state 52


State 39

	listLit -> '[' ']' .                                (rule 44)

	const          reduce using rule 44
	constr         reduce using rule 44
	var            reduce using rule 44
	plus           reduce using rule 44
	minus          reduce using rule 44
	mult           reduce using rule 44
	div            reduce using rule 44
	infix_var      reduce using rule 44
	gtype_2plus    reduce using rule 44
	'='            reduce using rule 44
	'::='          reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	']'            reduce using rule 44
	';'            reduce using rule 44
	','            reduce using rule 44
	':'            reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44


State 40

	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	term -> '(' exp . ')'                               (rule 38)
	commaSepExp -> exp .                                (rule 49)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	plus           shift, and enter state 29
	minus          shift, and enter state 30
	mult           shift, and enter state 31
	div            shift, and enter state 32
	infix_var      shift, and enter state 33
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 36
	')'            shift, and enter state 53
			(reduce using rule 49)

	','            reduce using rule 49
	':'            reduce using rule 51

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 41

	tupleLit -> '(' commaSepExp . ')'                   (rule 47)
	commaSepExp -> commaSepExp . ',' exp                (rule 48)

	')'            shift, and enter state 51
	','            shift, and enter state 52


State 42

	listColonLit -> colonSepExp ':' . exp               (rule 46)
	colonSepExp -> colonSepExp ':' . exp                (rule 50)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	genTypeVar     goto state 5
	exp            goto state 50
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	colonSepExp    goto state 16

State 43

	program -> '{' stmts . '}'                          (rule 3)
	stmts -> stmts . ';' stmt                           (rule 4)

	';'            shift, and enter state 48
	'}'            shift, and enter state 49


State 44

	stmts -> stmt .                                     (rule 5)

	';'            reduce using rule 5
	'}'            reduce using rule 5


State 45

	stmt -> exp . '::=' constructors                    (rule 6)
	stmt -> exp . '=' exp                               (rule 7)
	stmt -> exp .                                       (rule 8)
	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	plus           shift, and enter state 29
	minus          shift, and enter state 30
	mult           shift, and enter state 31
	div            shift, and enter state 32
	infix_var      shift, and enter state 33
	gtype_2plus    shift, and enter state 21
	'='            shift, and enter state 46
	'::='          shift, and enter state 47
	'('            shift, and enter state 36
	';'            reduce using rule 8
	':'            reduce using rule 51
	'}'            reduce using rule 8

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 46

	stmt -> exp '=' . exp                               (rule 7)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	genTypeVar     goto state 5
	exp            goto state 66
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	colonSepExp    goto state 16

State 47

	stmt -> exp '::=' . constructors                    (rule 6)

	constr         shift, and enter state 58

	constructors   goto state 65
	constructor    goto state 57

State 48

	stmts -> stmts ';' . stmt                           (rule 4)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	stmt           goto state 64
	genTypeVar     goto state 5
	exp            goto state 45
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	colonSepExp    goto state 16

State 49

	program -> '{' stmts '}' .                          (rule 3)

	%eof           reduce using rule 3


State 50

	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	listColonLit -> colonSepExp ':' exp .               (rule 46)
	colonSepExp -> colonSepExp ':' exp .                (rule 50)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
			(reduce using rule 46)

	constr         shift, and enter state 18
			(reduce using rule 46)

	var            shift, and enter state 19
			(reduce using rule 46)

	plus           shift, and enter state 29
			(reduce using rule 46)

	minus          shift, and enter state 30
			(reduce using rule 46)

	mult           shift, and enter state 31
			(reduce using rule 46)

	div            shift, and enter state 32
			(reduce using rule 46)

	infix_var      shift, and enter state 33
			(reduce using rule 46)

	gtype_2plus    shift, and enter state 21
			(reduce using rule 46)

	'='            reduce using rule 46
	'::='          reduce using rule 46
	'('            shift, and enter state 36
			(reduce using rule 46)

	')'            reduce using rule 46
	']'            reduce using rule 46
	';'            reduce using rule 46
	','            reduce using rule 46
	':'            reduce using rule 51
			(reduce using rule 50)
			(reduce using rule 46)

	'}'            reduce using rule 46
	%eof           reduce using rule 46

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 51

	tupleLit -> '(' commaSepExp ')' .                   (rule 47)

	const          reduce using rule 47
	constr         reduce using rule 47
	var            reduce using rule 47
	plus           reduce using rule 47
	minus          reduce using rule 47
	mult           reduce using rule 47
	div            reduce using rule 47
	infix_var      reduce using rule 47
	gtype_2plus    reduce using rule 47
	'='            reduce using rule 47
	'::='          reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	']'            reduce using rule 47
	';'            reduce using rule 47
	','            reduce using rule 47
	':'            reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 52

	commaSepExp -> commaSepExp ',' . exp                (rule 48)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 22
	'['            shift, and enter state 23

	genTypeVar     goto state 5
	exp            goto state 63
	apply          goto state 7
	infixApp       goto state 8
	term           goto state 9
	variable       goto state 10
	constant       goto state 11
	specialLit     goto state 12
	listLit        goto state 13
	listColonLit   goto state 14
	tupleLit       goto state 15
	colonSepExp    goto state 16

State 53

	term -> '(' exp ')' .                               (rule 38)

	const          reduce using rule 38
	constr         reduce using rule 38
	var            reduce using rule 38
	plus           reduce using rule 38
	minus          reduce using rule 38
	mult           reduce using rule 38
	div            reduce using rule 38
	infix_var      reduce using rule 38
	gtype_2plus    reduce using rule 38
	'='            reduce using rule 38
	'::='          reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	']'            reduce using rule 38
	';'            reduce using rule 38
	','            reduce using rule 38
	':'            reduce using rule 38
	'}'            reduce using rule 38
	%eof           reduce using rule 38


State 54

	listLit -> '[' commaSepExp ']' .                    (rule 45)

	const          reduce using rule 45
	constr         reduce using rule 45
	var            reduce using rule 45
	plus           reduce using rule 45
	minus          reduce using rule 45
	mult           reduce using rule 45
	div            reduce using rule 45
	infix_var      reduce using rule 45
	gtype_2plus    reduce using rule 45
	'='            reduce using rule 45
	'::='          reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	']'            reduce using rule 45
	';'            reduce using rule 45
	','            reduce using rule 45
	':'            reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 55

	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	term -> '(' exp . ')'                               (rule 38)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	plus           shift, and enter state 29
	minus          shift, and enter state 30
	mult           shift, and enter state 31
	div            shift, and enter state 32
	infix_var      shift, and enter state 33
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 36
	')'            shift, and enter state 53
	':'            reduce using rule 51

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 56

	def -> exp '::=' constructors .                     (rule 9)
	constructors -> constructors . '|' constructor      (rule 11)

	'|'            shift, and enter state 62
	%eof           reduce using rule 9


State 57

	constructors -> constructor .                       (rule 12)

	';'            reduce using rule 12
	'}'            reduce using rule 12
	'|'            reduce using rule 12
	%eof           reduce using rule 12


State 58

	constructor -> constr . constrTypes                 (rule 13)

	var            reduce using rule 15
	mult           reduce using rule 15
	gtype_2plus    reduce using rule 15
	'('            reduce using rule 15
	';'            reduce using rule 15
	'}'            reduce using rule 15
	'|'            reduce using rule 15
	%eof           reduce using rule 15

	constrTypes    goto state 61

State 59

	def -> exp '=' exp .                                (rule 10)
	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	plus           shift, and enter state 29
	minus          shift, and enter state 30
	mult           shift, and enter state 31
	div            shift, and enter state 32
	infix_var      shift, and enter state 33
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 36
	':'            reduce using rule 51
	%eof           reduce using rule 10

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 60

	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	infixApp -> exp infixOp exp .                       (rule 28)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
			(reduce using rule 28)

	constr         shift, and enter state 18
			(reduce using rule 28)

	var            shift, and enter state 19
			(reduce using rule 28)

	plus           shift, and enter state 29
			(reduce using rule 28)

	minus          shift, and enter state 30
			(reduce using rule 28)

	mult           shift, and enter state 31
			(reduce using rule 28)

	div            shift, and enter state 32
			(reduce using rule 28)

	infix_var      shift, and enter state 33
			(reduce using rule 28)

	gtype_2plus    shift, and enter state 21
			(reduce using rule 28)

	'='            reduce using rule 28
	'::='          reduce using rule 28
	'('            shift, and enter state 36
			(reduce using rule 28)

	')'            reduce using rule 28
	']'            reduce using rule 28
	';'            reduce using rule 28
	','            reduce using rule 28
	':'            reduce using rule 51
			(reduce using rule 28)

	'}'            reduce using rule 28
	%eof           reduce using rule 28

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 61

	constructor -> constr constrTypes .                 (rule 13)
	constrTypes -> constrTypes . constrArg              (rule 14)

	var            shift, and enter state 70
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 71
	';'            reduce using rule 13
	'}'            reduce using rule 13
	'|'            reduce using rule 13
	%eof           reduce using rule 13

	constrArg      goto state 68
	genTypeVar     goto state 69

State 62

	constructors -> constructors '|' . constructor      (rule 11)

	constr         shift, and enter state 58

	constructor    goto state 67

State 63

	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	commaSepExp -> commaSepExp ',' exp .                (rule 48)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	plus           shift, and enter state 29
	minus          shift, and enter state 30
	mult           shift, and enter state 31
	div            shift, and enter state 32
	infix_var      shift, and enter state 33
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 36
	')'            reduce using rule 48
	']'            reduce using rule 48
	','            reduce using rule 48
	':'            reduce using rule 51

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 64

	stmts -> stmts ';' stmt .                           (rule 4)

	';'            reduce using rule 4
	'}'            reduce using rule 4


State 65

	stmt -> exp '::=' constructors .                    (rule 6)
	constructors -> constructors . '|' constructor      (rule 11)

	';'            reduce using rule 6
	'}'            reduce using rule 6
	'|'            shift, and enter state 62


State 66

	stmt -> exp '=' exp .                               (rule 7)
	apply -> exp . term                                 (rule 27)
	infixApp -> exp . infixOp exp                       (rule 28)
	colonSepExp -> exp .                                (rule 51)

	const          shift, and enter state 17
	constr         shift, and enter state 18
	var            shift, and enter state 19
	plus           shift, and enter state 29
	minus          shift, and enter state 30
	mult           shift, and enter state 31
	div            shift, and enter state 32
	infix_var      shift, and enter state 33
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 36
	';'            reduce using rule 7
	':'            reduce using rule 51
	'}'            reduce using rule 7

	genTypeVar     goto state 5
	infixOp        goto state 27
	term           goto state 28
	variable       goto state 10
	constant       goto state 11

State 67

	constructors -> constructors '|' constructor .      (rule 11)

	';'            reduce using rule 11
	'}'            reduce using rule 11
	'|'            reduce using rule 11
	%eof           reduce using rule 11


State 68

	constrTypes -> constrTypes constrArg .              (rule 14)

	var            reduce using rule 14
	mult           reduce using rule 14
	gtype_2plus    reduce using rule 14
	'('            reduce using rule 14
	';'            reduce using rule 14
	'}'            reduce using rule 14
	'|'            reduce using rule 14
	%eof           reduce using rule 14


State 69

	constrArg -> genTypeVar .                           (rule 17)

	var            reduce using rule 17
	mult           reduce using rule 17
	gtype_2plus    reduce using rule 17
	'('            reduce using rule 17
	')'            reduce using rule 17
	';'            reduce using rule 17
	'}'            reduce using rule 17
	'|'            reduce using rule 17
	%eof           reduce using rule 17


State 70

	constrArg -> var .                                  (rule 16)

	var            reduce using rule 16
	mult           reduce using rule 16
	gtype_2plus    reduce using rule 16
	'('            reduce using rule 16
	')'            reduce using rule 16
	';'            reduce using rule 16
	'}'            reduce using rule 16
	'|'            reduce using rule 16
	%eof           reduce using rule 16


State 71

	constrArg -> '(' . constrArgs ')'                   (rule 18)

	var            reduce using rule 20
	mult           reduce using rule 20
	gtype_2plus    reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20

	constrArgs     goto state 72

State 72

	constrArg -> '(' constrArgs . ')'                   (rule 18)
	constrArgs -> constrArgs . constrArg                (rule 19)

	var            shift, and enter state 70
	mult           shift, and enter state 20
	gtype_2plus    shift, and enter state 21
	'('            shift, and enter state 71
	')'            shift, and enter state 74

	constrArg      goto state 73
	genTypeVar     goto state 69

State 73

	constrArgs -> constrArgs constrArg .                (rule 19)

	var            reduce using rule 19
	mult           reduce using rule 19
	gtype_2plus    reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19


State 74

	constrArg -> '(' constrArgs ')' .                   (rule 18)

	var            reduce using rule 18
	mult           reduce using rule 18
	gtype_2plus    reduce using rule 18
	'('            reduce using rule 18
	')'            reduce using rule 18
	';'            reduce using rule 18
	'}'            reduce using rule 18
	'|'            reduce using rule 18
	%eof           reduce using rule 18


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 52
Number of terminals: 21
Number of non-terminals: 26
Number of states: 75
