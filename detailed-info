-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from src/Miranda/Parser.y
-----------------------------------------------------------------------------

state 21 contains 3 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 52 contains 9 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	%start_defParser -> def                            (1)
	program -> '{' exp '}'                             (2)
	program -> '{' defs ';' exp '}'                    (3)
	defs -> defs ';' def                               (4)
	defs -> def                                        (5)
	def -> funcDef                                     (6)
	def -> varDef                                      (7)
	def -> typeDef                                     (8)
	funcDef -> var funcParams '=' exp                  (9)
	funcParams -> funcParams patt                      (10)
	funcParams -> patt                                 (11)
	patt -> var                                        (12)
	patt -> constr                                     (13)
	patt -> '(' constructor ')'                        (14)
	varDef -> var '=' exp                              (15)
	typeDef -> var genTypeVars '::=' constructors      (16)
	constructors -> constructors '|' constructor       (17)
	constructors -> constructor                        (18)
	constructor -> constr constrTypes                  (19)
	constrTypes -> constrTypes constrArg               (20)
	constrTypes ->                                     (21)
	constrArg -> var                                   (22)
	constrArg -> genTypeVar                            (23)
	genTypeVars -> genTypeVars genTypeVar              (24)
	genTypeVars ->                                     (25)
	genTypeVar -> mult                                 (26)
	genTypeVar -> gtype_2plus                          (27)
	exp -> apply                                       (28)
	exp -> infixApp                                    (29)
	exp -> term                                        (30)
	apply -> exp term                                  (31)
	infixApp -> exp infixOp exp                        (32)
	infixOp -> plus                                    (33)
	infixOp -> minus                                   (34)
	infixOp -> mult                                    (35)
	infixOp -> div                                     (36)
	infixOp -> infix_var                               (37)
	term -> variable                                   (38)
	term -> constr                                     (39)
	term -> constant                                   (40)
	term -> '(' exp ')'                                (41)
	variable -> var                                    (42)
	constant -> const                                  (43)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	const          { T.Constant $$ }
	constr         { T.Constructor $$ }
	var            { T.Variable $$ }
	plus           { T.InfixOp T.IPlus }
	minus          { T.InfixOp T.IMinus }
	mult           { T.InfixOp T.IMult }
	div            { T.InfixOp T.IDiv }
	infix_var      { T.InfixOp (T.IVar _) }
	gtype_2plus    { T.GenTypeVar $$ }
	'='            { T.Equal }
	'::='          { T.TypeEq }
	'('            { T.LP }
	')'            { T.RP }
	';'            { T.Semi }
	'{'            { T.LC }
	'}'            { T.RC }
	'|'            { T.VertBar }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	%start_defParser rule  1
	program         rules 2, 3
	defs            rules 4, 5
	def             rules 6, 7, 8
	funcDef         rule  9
	funcParams      rules 10, 11
	patt            rules 12, 13, 14
	varDef          rule  15
	typeDef         rule  16
	constructors    rules 17, 18
	constructor     rule  19
	constrTypes     rules 20, 21
	constrArg       rules 22, 23
	genTypeVars     rules 24, 25
	genTypeVar      rules 26, 27
	exp             rules 28, 29, 30
	apply           rule  31
	infixApp        rule  32
	infixOp         rules 33, 34, 35, 36, 37
	term            rules 38, 39, 40, 41
	variable        rule  42
	constant        rule  43

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'{'            shift, and enter state 10

	program        goto state 9

State 1


	var            shift, and enter state 8

	def            goto state 4
	funcDef        goto state 5
	varDef         goto state 6
	typeDef        goto state 7

State 2


	'{'            shift, and enter state 3


State 3

	program -> '{' . exp '}'                            (rule 2)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 30
	'('            shift, and enter state 22

	exp            goto state 13
	apply          goto state 14
	infixApp       goto state 15
	term           goto state 16
	variable       goto state 17
	constant       goto state 18

State 4

	%start_defParser -> def .                           (rule 1)

	%eof           accept


State 5

	def -> funcDef .                                    (rule 6)

	';'            reduce using rule 6
	%eof           reduce using rule 6


State 6

	def -> varDef .                                     (rule 7)

	';'            reduce using rule 7
	%eof           reduce using rule 7


State 7

	def -> typeDef .                                    (rule 8)

	';'            reduce using rule 8
	%eof           reduce using rule 8


State 8

	funcDef -> var . funcParams '=' exp                 (rule 9)
	varDef -> var . '=' exp                             (rule 15)
	typeDef -> var . genTypeVars '::=' constructors     (rule 16)

	constr         shift, and enter state 26
	var            shift, and enter state 27
	mult           reduce using rule 25
	gtype_2plus    reduce using rule 25
	'='            shift, and enter state 28
	'::='          reduce using rule 25
	'('            shift, and enter state 29

	funcParams     goto state 23
	patt           goto state 24
	genTypeVars    goto state 25

State 9

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 10

	program -> '{' . exp '}'                            (rule 2)
	program -> '{' . defs ';' exp '}'                   (rule 3)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 21
	'('            shift, and enter state 22

	defs           goto state 11
	def            goto state 12
	funcDef        goto state 5
	varDef         goto state 6
	typeDef        goto state 7
	exp            goto state 13
	apply          goto state 14
	infixApp       goto state 15
	term           goto state 16
	variable       goto state 17
	constant       goto state 18

State 11

	program -> '{' defs . ';' exp '}'                   (rule 3)
	defs -> defs . ';' def                              (rule 4)

	';'            shift, and enter state 49


State 12

	defs -> def .                                       (rule 5)

	';'            reduce using rule 5


State 13

	program -> '{' exp . '}'                            (rule 2)
	apply -> exp . term                                 (rule 31)
	infixApp -> exp . infixOp exp                       (rule 32)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 30
	plus           shift, and enter state 43
	minus          shift, and enter state 44
	mult           shift, and enter state 45
	div            shift, and enter state 46
	infix_var      shift, and enter state 47
	'('            shift, and enter state 22
	'}'            shift, and enter state 48

	infixOp        goto state 41
	term           goto state 42
	variable       goto state 17
	constant       goto state 18

State 14

	exp -> apply .                                      (rule 28)

	const          reduce using rule 28
	constr         reduce using rule 28
	var            reduce using rule 28
	plus           reduce using rule 28
	minus          reduce using rule 28
	mult           reduce using rule 28
	div            reduce using rule 28
	infix_var      reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	';'            reduce using rule 28
	'}'            reduce using rule 28
	%eof           reduce using rule 28


State 15

	exp -> infixApp .                                   (rule 29)

	const          reduce using rule 29
	constr         reduce using rule 29
	var            reduce using rule 29
	plus           reduce using rule 29
	minus          reduce using rule 29
	mult           reduce using rule 29
	div            reduce using rule 29
	infix_var      reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	';'            reduce using rule 29
	'}'            reduce using rule 29
	%eof           reduce using rule 29


State 16

	exp -> term .                                       (rule 30)

	const          reduce using rule 30
	constr         reduce using rule 30
	var            reduce using rule 30
	plus           reduce using rule 30
	minus          reduce using rule 30
	mult           reduce using rule 30
	div            reduce using rule 30
	infix_var      reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	';'            reduce using rule 30
	'}'            reduce using rule 30
	%eof           reduce using rule 30


State 17

	term -> variable .                                  (rule 38)

	const          reduce using rule 38
	constr         reduce using rule 38
	var            reduce using rule 38
	plus           reduce using rule 38
	minus          reduce using rule 38
	mult           reduce using rule 38
	div            reduce using rule 38
	infix_var      reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	';'            reduce using rule 38
	'}'            reduce using rule 38
	%eof           reduce using rule 38


State 18

	term -> constant .                                  (rule 40)

	const          reduce using rule 40
	constr         reduce using rule 40
	var            reduce using rule 40
	plus           reduce using rule 40
	minus          reduce using rule 40
	mult           reduce using rule 40
	div            reduce using rule 40
	infix_var      reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	';'            reduce using rule 40
	'}'            reduce using rule 40
	%eof           reduce using rule 40


State 19

	constant -> const .                                 (rule 43)

	const          reduce using rule 43
	constr         reduce using rule 43
	var            reduce using rule 43
	plus           reduce using rule 43
	minus          reduce using rule 43
	mult           reduce using rule 43
	div            reduce using rule 43
	infix_var      reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	';'            reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 20

	term -> constr .                                    (rule 39)

	const          reduce using rule 39
	constr         reduce using rule 39
	var            reduce using rule 39
	plus           reduce using rule 39
	minus          reduce using rule 39
	mult           reduce using rule 39
	div            reduce using rule 39
	infix_var      reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	';'            reduce using rule 39
	'}'            reduce using rule 39
	%eof           reduce using rule 39


State 21

	funcDef -> var . funcParams '=' exp                 (rule 9)
	varDef -> var . '=' exp                             (rule 15)
	typeDef -> var . genTypeVars '::=' constructors     (rule 16)
	variable -> var .                                   (rule 42)

	const          reduce using rule 42
	constr         shift, and enter state 26
			(reduce using rule 42)

	var            shift, and enter state 27
			(reduce using rule 42)

	plus           reduce using rule 42
	minus          reduce using rule 42
	mult           reduce using rule 42
			(reduce using rule 25)

	div            reduce using rule 42
	infix_var      reduce using rule 42
	gtype_2plus    reduce using rule 25
	'='            shift, and enter state 28
	'::='          reduce using rule 25
	'('            shift, and enter state 29
			(reduce using rule 42)

	'}'            reduce using rule 42

	funcParams     goto state 23
	patt           goto state 24
	genTypeVars    goto state 25

State 22

	term -> '(' . exp ')'                               (rule 41)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 30
	'('            shift, and enter state 22

	exp            goto state 40
	apply          goto state 14
	infixApp       goto state 15
	term           goto state 16
	variable       goto state 17
	constant       goto state 18

State 23

	funcDef -> var funcParams . '=' exp                 (rule 9)
	funcParams -> funcParams . patt                     (rule 10)

	constr         shift, and enter state 26
	var            shift, and enter state 27
	'='            shift, and enter state 39
	'('            shift, and enter state 29

	patt           goto state 38

State 24

	funcParams -> patt .                                (rule 11)

	constr         reduce using rule 11
	var            reduce using rule 11
	'='            reduce using rule 11
	'('            reduce using rule 11


State 25

	typeDef -> var genTypeVars . '::=' constructors     (rule 16)
	genTypeVars -> genTypeVars . genTypeVar             (rule 24)

	mult           shift, and enter state 35
	gtype_2plus    shift, and enter state 36
	'::='          shift, and enter state 37

	genTypeVar     goto state 34

State 26

	patt -> constr .                                    (rule 13)

	constr         reduce using rule 13
	var            reduce using rule 13
	'='            reduce using rule 13
	'('            reduce using rule 13


State 27

	patt -> var .                                       (rule 12)

	constr         reduce using rule 12
	var            reduce using rule 12
	'='            reduce using rule 12
	'('            reduce using rule 12


State 28

	varDef -> var '=' . exp                             (rule 15)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 30
	'('            shift, and enter state 22

	exp            goto state 33
	apply          goto state 14
	infixApp       goto state 15
	term           goto state 16
	variable       goto state 17
	constant       goto state 18

State 29

	patt -> '(' . constructor ')'                       (rule 14)

	constr         shift, and enter state 32

	constructor    goto state 31

State 30

	variable -> var .                                   (rule 42)

	const          reduce using rule 42
	constr         reduce using rule 42
	var            reduce using rule 42
	plus           reduce using rule 42
	minus          reduce using rule 42
	mult           reduce using rule 42
	div            reduce using rule 42
	infix_var      reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	';'            reduce using rule 42
	'}'            reduce using rule 42
	%eof           reduce using rule 42


State 31

	patt -> '(' constructor . ')'                       (rule 14)

	')'            shift, and enter state 58


State 32

	constructor -> constr . constrTypes                 (rule 19)

	var            reduce using rule 21
	mult           reduce using rule 21
	gtype_2plus    reduce using rule 21
	')'            reduce using rule 21
	';'            reduce using rule 21
	'|'            reduce using rule 21
	%eof           reduce using rule 21

	constrTypes    goto state 57

State 33

	varDef -> var '=' exp .                             (rule 15)
	apply -> exp . term                                 (rule 31)
	infixApp -> exp . infixOp exp                       (rule 32)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 30
	plus           shift, and enter state 43
	minus          shift, and enter state 44
	mult           shift, and enter state 45
	div            shift, and enter state 46
	infix_var      shift, and enter state 47
	'('            shift, and enter state 22
	';'            reduce using rule 15
	%eof           reduce using rule 15

	infixOp        goto state 41
	term           goto state 42
	variable       goto state 17
	constant       goto state 18

State 34

	genTypeVars -> genTypeVars genTypeVar .             (rule 24)

	mult           reduce using rule 24
	gtype_2plus    reduce using rule 24
	'::='          reduce using rule 24


State 35

	genTypeVar -> mult .                                (rule 26)

	var            reduce using rule 26
	mult           reduce using rule 26
	gtype_2plus    reduce using rule 26
	'::='          reduce using rule 26
	')'            reduce using rule 26
	';'            reduce using rule 26
	'|'            reduce using rule 26
	%eof           reduce using rule 26


State 36

	genTypeVar -> gtype_2plus .                         (rule 27)

	var            reduce using rule 27
	mult           reduce using rule 27
	gtype_2plus    reduce using rule 27
	'::='          reduce using rule 27
	')'            reduce using rule 27
	';'            reduce using rule 27
	'|'            reduce using rule 27
	%eof           reduce using rule 27


State 37

	typeDef -> var genTypeVars '::=' . constructors     (rule 16)

	constr         shift, and enter state 32

	constructors   goto state 55
	constructor    goto state 56

State 38

	funcParams -> funcParams patt .                     (rule 10)

	constr         reduce using rule 10
	var            reduce using rule 10
	'='            reduce using rule 10
	'('            reduce using rule 10


State 39

	funcDef -> var funcParams '=' . exp                 (rule 9)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 30
	'('            shift, and enter state 22

	exp            goto state 54
	apply          goto state 14
	infixApp       goto state 15
	term           goto state 16
	variable       goto state 17
	constant       goto state 18

State 40

	apply -> exp . term                                 (rule 31)
	infixApp -> exp . infixOp exp                       (rule 32)
	term -> '(' exp . ')'                               (rule 41)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 30
	plus           shift, and enter state 43
	minus          shift, and enter state 44
	mult           shift, and enter state 45
	div            shift, and enter state 46
	infix_var      shift, and enter state 47
	'('            shift, and enter state 22
	')'            shift, and enter state 53

	infixOp        goto state 41
	term           goto state 42
	variable       goto state 17
	constant       goto state 18

State 41

	infixApp -> exp infixOp . exp                       (rule 32)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 30
	'('            shift, and enter state 22

	exp            goto state 52
	apply          goto state 14
	infixApp       goto state 15
	term           goto state 16
	variable       goto state 17
	constant       goto state 18

State 42

	apply -> exp term .                                 (rule 31)

	const          reduce using rule 31
	constr         reduce using rule 31
	var            reduce using rule 31
	plus           reduce using rule 31
	minus          reduce using rule 31
	mult           reduce using rule 31
	div            reduce using rule 31
	infix_var      reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	';'            reduce using rule 31
	'}'            reduce using rule 31
	%eof           reduce using rule 31


State 43

	infixOp -> plus .                                   (rule 33)

	const          reduce using rule 33
	constr         reduce using rule 33
	var            reduce using rule 33
	'('            reduce using rule 33


State 44

	infixOp -> minus .                                  (rule 34)

	const          reduce using rule 34
	constr         reduce using rule 34
	var            reduce using rule 34
	'('            reduce using rule 34


State 45

	infixOp -> mult .                                   (rule 35)

	const          reduce using rule 35
	constr         reduce using rule 35
	var            reduce using rule 35
	'('            reduce using rule 35


State 46

	infixOp -> div .                                    (rule 36)

	const          reduce using rule 36
	constr         reduce using rule 36
	var            reduce using rule 36
	'('            reduce using rule 36


State 47

	infixOp -> infix_var .                              (rule 37)

	const          reduce using rule 37
	constr         reduce using rule 37
	var            reduce using rule 37
	'('            reduce using rule 37


State 48

	program -> '{' exp '}' .                            (rule 2)

	%eof           reduce using rule 2


State 49

	program -> '{' defs ';' . exp '}'                   (rule 3)
	defs -> defs ';' . def                              (rule 4)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 21
	'('            shift, and enter state 22

	def            goto state 50
	funcDef        goto state 5
	varDef         goto state 6
	typeDef        goto state 7
	exp            goto state 51
	apply          goto state 14
	infixApp       goto state 15
	term           goto state 16
	variable       goto state 17
	constant       goto state 18

State 50

	defs -> defs ';' def .                              (rule 4)

	';'            reduce using rule 4


State 51

	program -> '{' defs ';' exp . '}'                   (rule 3)
	apply -> exp . term                                 (rule 31)
	infixApp -> exp . infixOp exp                       (rule 32)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 30
	plus           shift, and enter state 43
	minus          shift, and enter state 44
	mult           shift, and enter state 45
	div            shift, and enter state 46
	infix_var      shift, and enter state 47
	'('            shift, and enter state 22
	'}'            shift, and enter state 63

	infixOp        goto state 41
	term           goto state 42
	variable       goto state 17
	constant       goto state 18

State 52

	apply -> exp . term                                 (rule 31)
	infixApp -> exp . infixOp exp                       (rule 32)
	infixApp -> exp infixOp exp .                       (rule 32)

	const          shift, and enter state 19
			(reduce using rule 32)

	constr         shift, and enter state 20
			(reduce using rule 32)

	var            shift, and enter state 30
			(reduce using rule 32)

	plus           shift, and enter state 43
			(reduce using rule 32)

	minus          shift, and enter state 44
			(reduce using rule 32)

	mult           shift, and enter state 45
			(reduce using rule 32)

	div            shift, and enter state 46
			(reduce using rule 32)

	infix_var      shift, and enter state 47
			(reduce using rule 32)

	'('            shift, and enter state 22
			(reduce using rule 32)

	')'            reduce using rule 32
	';'            reduce using rule 32
	'}'            reduce using rule 32
	%eof           reduce using rule 32

	infixOp        goto state 41
	term           goto state 42
	variable       goto state 17
	constant       goto state 18

State 53

	term -> '(' exp ')' .                               (rule 41)

	const          reduce using rule 41
	constr         reduce using rule 41
	var            reduce using rule 41
	plus           reduce using rule 41
	minus          reduce using rule 41
	mult           reduce using rule 41
	div            reduce using rule 41
	infix_var      reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	';'            reduce using rule 41
	'}'            reduce using rule 41
	%eof           reduce using rule 41


State 54

	funcDef -> var funcParams '=' exp .                 (rule 9)
	apply -> exp . term                                 (rule 31)
	infixApp -> exp . infixOp exp                       (rule 32)

	const          shift, and enter state 19
	constr         shift, and enter state 20
	var            shift, and enter state 30
	plus           shift, and enter state 43
	minus          shift, and enter state 44
	mult           shift, and enter state 45
	div            shift, and enter state 46
	infix_var      shift, and enter state 47
	'('            shift, and enter state 22
	';'            reduce using rule 9
	%eof           reduce using rule 9

	infixOp        goto state 41
	term           goto state 42
	variable       goto state 17
	constant       goto state 18

State 55

	typeDef -> var genTypeVars '::=' constructors .     (rule 16)
	constructors -> constructors . '|' constructor      (rule 17)

	';'            reduce using rule 16
	'|'            shift, and enter state 62
	%eof           reduce using rule 16


State 56

	constructors -> constructor .                       (rule 18)

	';'            reduce using rule 18
	'|'            reduce using rule 18
	%eof           reduce using rule 18


State 57

	constructor -> constr constrTypes .                 (rule 19)
	constrTypes -> constrTypes . constrArg              (rule 20)

	var            shift, and enter state 61
	mult           shift, and enter state 35
	gtype_2plus    shift, and enter state 36
	')'            reduce using rule 19
	';'            reduce using rule 19
	'|'            reduce using rule 19
	%eof           reduce using rule 19

	constrArg      goto state 59
	genTypeVar     goto state 60

State 58

	patt -> '(' constructor ')' .                       (rule 14)

	constr         reduce using rule 14
	var            reduce using rule 14
	'='            reduce using rule 14
	'('            reduce using rule 14


State 59

	constrTypes -> constrTypes constrArg .              (rule 20)

	var            reduce using rule 20
	mult           reduce using rule 20
	gtype_2plus    reduce using rule 20
	')'            reduce using rule 20
	';'            reduce using rule 20
	'|'            reduce using rule 20
	%eof           reduce using rule 20


State 60

	constrArg -> genTypeVar .                           (rule 23)

	var            reduce using rule 23
	mult           reduce using rule 23
	gtype_2plus    reduce using rule 23
	')'            reduce using rule 23
	';'            reduce using rule 23
	'|'            reduce using rule 23
	%eof           reduce using rule 23


State 61

	constrArg -> var .                                  (rule 22)

	var            reduce using rule 22
	mult           reduce using rule 22
	gtype_2plus    reduce using rule 22
	')'            reduce using rule 22
	';'            reduce using rule 22
	'|'            reduce using rule 22
	%eof           reduce using rule 22


State 62

	constructors -> constructors '|' . constructor      (rule 17)

	constr         shift, and enter state 32

	constructor    goto state 64

State 63

	program -> '{' defs ';' exp '}' .                   (rule 3)

	%eof           reduce using rule 3


State 64

	constructors -> constructors '|' constructor .      (rule 17)

	';'            reduce using rule 17
	'|'            reduce using rule 17
	%eof           reduce using rule 17


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 44
Number of terminals: 17
Number of non-terminals: 23
Number of states: 65
