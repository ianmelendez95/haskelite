-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from src/Miranda/Parser.y
-----------------------------------------------------------------------------

state 31 contains 3 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 42 contains 1 shift/reduce conflicts.
state 54 contains 9 shift/reduce conflicts and 1 reduce/reduce conflicts.
state 55 contains 9 shift/reduce conflicts and 1 reduce/reduce conflicts.

rule 58 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> program                           (0)
	%start_defParser -> def                            (1)
	%start_expParser -> exp                            (2)
	program -> '{' exp '}'                             (3)
	program -> '{' defs ';' exp '}'                    (4)
	defs -> defs ';' def                               (5)
	defs -> def                                        (6)
	def -> funcDef                                     (7)
	def -> varDef                                      (8)
	def -> typeDef                                     (9)
	funcDef -> var funcParams '=' exp                  (10)
	funcParams -> funcParams patt                      (11)
	funcParams -> patt                                 (12)
	patt -> var                                        (13)
	patt -> constr                                     (14)
	patt -> '(' constructor ')'                        (15)
	varDef -> var '=' exp                              (16)
	typeDef -> var genTypeVars '::=' constructors      (17)
	constructors -> constructors '|' constructor       (18)
	constructors -> constructor                        (19)
	constructor -> constr constrTypes                  (20)
	constrTypes -> constrTypes constrArg               (21)
	constrTypes ->                                     (22)
	constrArg -> var                                   (23)
	constrArg -> genTypeVar                            (24)
	constrArg -> '(' constrArgs ')'                    (25)
	constrArgs -> constrArgs constrArg                 (26)
	constrArgs ->                                      (27)
	genTypeVars -> genTypeVars genTypeVar              (28)
	genTypeVars ->                                     (29)
	genTypeVar -> mult                                 (30)
	genTypeVar -> gtype_2plus                          (31)
	exp -> apply                                       (32)
	exp -> infixApp                                    (33)
	exp -> specialLit                                  (34)
	exp -> term                                        (35)
	apply -> exp term                                  (36)
	infixApp -> exp infixOp exp                        (37)
	infixOp -> plus                                    (38)
	infixOp -> minus                                   (39)
	infixOp -> mult                                    (40)
	infixOp -> div                                     (41)
	infixOp -> infix_var                               (42)
	term -> variable                                   (43)
	term -> constr                                     (44)
	term -> constant                                   (45)
	term -> '(' exp ')'                                (46)
	variable -> var                                    (47)
	constant -> const                                  (48)
	specialLit -> listLit                              (49)
	specialLit -> listColonLit                         (50)
	specialLit -> tupleLit                             (51)
	listLit -> '[' ']'                                 (52)
	listLit -> '[' commaSepExp ']'                     (53)
	listColonLit -> colonSepExp ':' exp                (54)
	tupleLit -> '(' commaSepExp ')'                    (55)
	commaSepExp -> commaSepExp ',' exp                 (56)
	commaSepExp -> exp                                 (57)
	colonSepExp -> colonSepExp ':' exp                 (58)
	colonSepExp -> exp                                 (59)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	const          { T.Constant $$ }
	constr         { T.Constructor $$ }
	var            { T.Variable $$ }
	plus           { T.InfixOp T.IPlus }
	minus          { T.InfixOp T.IMinus }
	mult           { T.InfixOp T.IMult }
	div            { T.InfixOp T.IDiv }
	infix_var      { T.InfixOp (T.IVar _) }
	gtype_2plus    { T.GenTypeVar $$ }
	'='            { T.Equal }
	'::='          { T.TypeEq }
	'('            { T.LP }
	')'            { T.RP }
	'['            { T.LB }
	']'            { T.RB }
	';'            { T.Semi }
	','            { T.Comma }
	':'            { T.Colon }
	'{'            { T.LC }
	'}'            { T.RC }
	'|'            { T.VertBar }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	%start_defParser rule  1
	%start_expParser rule  2
	program         rules 3, 4
	defs            rules 5, 6
	def             rules 7, 8, 9
	funcDef         rule  10
	funcParams      rules 11, 12
	patt            rules 13, 14, 15
	varDef          rule  16
	typeDef         rule  17
	constructors    rules 18, 19
	constructor     rule  20
	constrTypes     rules 21, 22
	constrArg       rules 23, 24, 25
	constrArgs      rules 26, 27
	genTypeVars     rules 28, 29
	genTypeVar      rules 30, 31
	exp             rules 32, 33, 34, 35
	apply           rule  36
	infixApp        rule  37
	infixOp         rules 38, 39, 40, 41, 42
	term            rules 43, 44, 45, 46
	variable        rule  47
	constant        rule  48
	specialLit      rules 49, 50, 51
	listLit         rules 52, 53
	listColonLit    rule  54
	tupleLit        rule  55
	commaSepExp     rules 56, 57
	colonSepExp     rules 58, 59

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'{'            shift, and enter state 27

	program        goto state 26

State 1


	var            shift, and enter state 25

	def            goto state 21
	funcDef        goto state 22
	varDef         goto state 23
	typeDef        goto state 24

State 2


	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	exp            goto state 5
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	colonSepExp    goto state 15

State 3


	'{'            shift, and enter state 4


State 4

	program -> '{' . exp '}'                            (rule 3)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	exp            goto state 30
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	colonSepExp    goto state 15

State 5

	%start_expParser -> exp .                           (rule 2)
	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	plus           shift, and enter state 47
	minus          shift, and enter state 48
	mult           shift, and enter state 49
	div            shift, and enter state 50
	infix_var      shift, and enter state 51
	'('            shift, and enter state 52
	':'            reduce using rule 59
	%eof           accept

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 6

	exp -> apply .                                      (rule 32)

	const          reduce using rule 32
	constr         reduce using rule 32
	var            reduce using rule 32
	plus           reduce using rule 32
	minus          reduce using rule 32
	mult           reduce using rule 32
	div            reduce using rule 32
	infix_var      reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	']'            reduce using rule 32
	';'            reduce using rule 32
	','            reduce using rule 32
	':'            reduce using rule 32
	'}'            reduce using rule 32
	%eof           reduce using rule 32


State 7

	exp -> infixApp .                                   (rule 33)

	const          reduce using rule 33
	constr         reduce using rule 33
	var            reduce using rule 33
	plus           reduce using rule 33
	minus          reduce using rule 33
	mult           reduce using rule 33
	div            reduce using rule 33
	infix_var      reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	']'            reduce using rule 33
	';'            reduce using rule 33
	','            reduce using rule 33
	':'            reduce using rule 33
	'}'            reduce using rule 33
	%eof           reduce using rule 33


State 8

	exp -> term .                                       (rule 35)

	const          reduce using rule 35
	constr         reduce using rule 35
	var            reduce using rule 35
	plus           reduce using rule 35
	minus          reduce using rule 35
	mult           reduce using rule 35
	div            reduce using rule 35
	infix_var      reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	']'            reduce using rule 35
	';'            reduce using rule 35
	','            reduce using rule 35
	':'            reduce using rule 35
	'}'            reduce using rule 35
	%eof           reduce using rule 35


State 9

	term -> variable .                                  (rule 43)

	const          reduce using rule 43
	constr         reduce using rule 43
	var            reduce using rule 43
	plus           reduce using rule 43
	minus          reduce using rule 43
	mult           reduce using rule 43
	div            reduce using rule 43
	infix_var      reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	']'            reduce using rule 43
	';'            reduce using rule 43
	','            reduce using rule 43
	':'            reduce using rule 43
	'}'            reduce using rule 43
	%eof           reduce using rule 43


State 10

	term -> constant .                                  (rule 45)

	const          reduce using rule 45
	constr         reduce using rule 45
	var            reduce using rule 45
	plus           reduce using rule 45
	minus          reduce using rule 45
	mult           reduce using rule 45
	div            reduce using rule 45
	infix_var      reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	']'            reduce using rule 45
	';'            reduce using rule 45
	','            reduce using rule 45
	':'            reduce using rule 45
	'}'            reduce using rule 45
	%eof           reduce using rule 45


State 11

	exp -> specialLit .                                 (rule 34)

	const          reduce using rule 34
	constr         reduce using rule 34
	var            reduce using rule 34
	plus           reduce using rule 34
	minus          reduce using rule 34
	mult           reduce using rule 34
	div            reduce using rule 34
	infix_var      reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	']'            reduce using rule 34
	';'            reduce using rule 34
	','            reduce using rule 34
	':'            reduce using rule 34
	'}'            reduce using rule 34
	%eof           reduce using rule 34


State 12

	specialLit -> listLit .                             (rule 49)

	const          reduce using rule 49
	constr         reduce using rule 49
	var            reduce using rule 49
	plus           reduce using rule 49
	minus          reduce using rule 49
	mult           reduce using rule 49
	div            reduce using rule 49
	infix_var      reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	']'            reduce using rule 49
	';'            reduce using rule 49
	','            reduce using rule 49
	':'            reduce using rule 49
	'}'            reduce using rule 49
	%eof           reduce using rule 49


State 13

	specialLit -> listColonLit .                        (rule 50)

	const          reduce using rule 50
	constr         reduce using rule 50
	var            reduce using rule 50
	plus           reduce using rule 50
	minus          reduce using rule 50
	mult           reduce using rule 50
	div            reduce using rule 50
	infix_var      reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	']'            reduce using rule 50
	';'            reduce using rule 50
	','            reduce using rule 50
	':'            reduce using rule 50
	'}'            reduce using rule 50
	%eof           reduce using rule 50


State 14

	specialLit -> tupleLit .                            (rule 51)

	const          reduce using rule 51
	constr         reduce using rule 51
	var            reduce using rule 51
	plus           reduce using rule 51
	minus          reduce using rule 51
	mult           reduce using rule 51
	div            reduce using rule 51
	infix_var      reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	']'            reduce using rule 51
	';'            reduce using rule 51
	','            reduce using rule 51
	':'            reduce using rule 51
	'}'            reduce using rule 51
	%eof           reduce using rule 51


State 15

	listColonLit -> colonSepExp . ':' exp               (rule 54)
	colonSepExp -> colonSepExp . ':' exp                (rule 58)

	':'            shift, and enter state 44


State 16

	constant -> const .                                 (rule 48)

	const          reduce using rule 48
	constr         reduce using rule 48
	var            reduce using rule 48
	plus           reduce using rule 48
	minus          reduce using rule 48
	mult           reduce using rule 48
	div            reduce using rule 48
	infix_var      reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	']'            reduce using rule 48
	';'            reduce using rule 48
	','            reduce using rule 48
	':'            reduce using rule 48
	'}'            reduce using rule 48
	%eof           reduce using rule 48


State 17

	term -> constr .                                    (rule 44)

	const          reduce using rule 44
	constr         reduce using rule 44
	var            reduce using rule 44
	plus           reduce using rule 44
	minus          reduce using rule 44
	mult           reduce using rule 44
	div            reduce using rule 44
	infix_var      reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	']'            reduce using rule 44
	';'            reduce using rule 44
	','            reduce using rule 44
	':'            reduce using rule 44
	'}'            reduce using rule 44
	%eof           reduce using rule 44


State 18

	variable -> var .                                   (rule 47)

	const          reduce using rule 47
	constr         reduce using rule 47
	var            reduce using rule 47
	plus           reduce using rule 47
	minus          reduce using rule 47
	mult           reduce using rule 47
	div            reduce using rule 47
	infix_var      reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	']'            reduce using rule 47
	';'            reduce using rule 47
	','            reduce using rule 47
	':'            reduce using rule 47
	'}'            reduce using rule 47
	%eof           reduce using rule 47


State 19

	term -> '(' . exp ')'                               (rule 46)
	tupleLit -> '(' . commaSepExp ')'                   (rule 55)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	exp            goto state 42
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	commaSepExp    goto state 43
	colonSepExp    goto state 15

State 20

	listLit -> '[' . ']'                                (rule 52)
	listLit -> '[' . commaSepExp ']'                    (rule 53)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20
	']'            shift, and enter state 41

	exp            goto state 39
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	commaSepExp    goto state 40
	colonSepExp    goto state 15

State 21

	%start_defParser -> def .                           (rule 1)

	%eof           accept


State 22

	def -> funcDef .                                    (rule 7)

	';'            reduce using rule 7
	%eof           reduce using rule 7


State 23

	def -> varDef .                                     (rule 8)

	';'            reduce using rule 8
	%eof           reduce using rule 8


State 24

	def -> typeDef .                                    (rule 9)

	';'            reduce using rule 9
	%eof           reduce using rule 9


State 25

	funcDef -> var . funcParams '=' exp                 (rule 10)
	varDef -> var . '=' exp                             (rule 16)
	typeDef -> var . genTypeVars '::=' constructors     (rule 17)

	constr         shift, and enter state 35
	var            shift, and enter state 36
	mult           reduce using rule 29
	gtype_2plus    reduce using rule 29
	'='            shift, and enter state 37
	'::='          reduce using rule 29
	'('            shift, and enter state 38

	funcParams     goto state 32
	patt           goto state 33
	genTypeVars    goto state 34

State 26

	%start_parser -> program .                          (rule 0)

	%eof           accept


State 27

	program -> '{' . exp '}'                            (rule 3)
	program -> '{' . defs ';' exp '}'                   (rule 4)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 31
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	defs           goto state 28
	def            goto state 29
	funcDef        goto state 22
	varDef         goto state 23
	typeDef        goto state 24
	exp            goto state 30
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	colonSepExp    goto state 15

State 28

	program -> '{' defs . ';' exp '}'                   (rule 4)
	defs -> defs . ';' def                              (rule 5)

	';'            shift, and enter state 70


State 29

	defs -> def .                                       (rule 6)

	';'            reduce using rule 6


State 30

	program -> '{' exp . '}'                            (rule 3)
	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	plus           shift, and enter state 47
	minus          shift, and enter state 48
	mult           shift, and enter state 49
	div            shift, and enter state 50
	infix_var      shift, and enter state 51
	'('            shift, and enter state 52
	':'            reduce using rule 59
	'}'            shift, and enter state 69

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 31

	funcDef -> var . funcParams '=' exp                 (rule 10)
	varDef -> var . '=' exp                             (rule 16)
	typeDef -> var . genTypeVars '::=' constructors     (rule 17)
	variable -> var .                                   (rule 47)

	const          reduce using rule 47
	constr         shift, and enter state 35
			(reduce using rule 47)

	var            shift, and enter state 36
			(reduce using rule 47)

	plus           reduce using rule 47
	minus          reduce using rule 47
	mult           reduce using rule 47
			(reduce using rule 29)

	div            reduce using rule 47
	infix_var      reduce using rule 47
	gtype_2plus    reduce using rule 29
	'='            shift, and enter state 37
	'::='          reduce using rule 29
	'('            shift, and enter state 38
			(reduce using rule 47)

	':'            reduce using rule 47
	'}'            reduce using rule 47

	funcParams     goto state 32
	patt           goto state 33
	genTypeVars    goto state 34

State 32

	funcDef -> var funcParams . '=' exp                 (rule 10)
	funcParams -> funcParams . patt                     (rule 11)

	constr         shift, and enter state 35
	var            shift, and enter state 36
	'='            shift, and enter state 68
	'('            shift, and enter state 38

	patt           goto state 67

State 33

	funcParams -> patt .                                (rule 12)

	constr         reduce using rule 12
	var            reduce using rule 12
	'='            reduce using rule 12
	'('            reduce using rule 12


State 34

	typeDef -> var genTypeVars . '::=' constructors     (rule 17)
	genTypeVars -> genTypeVars . genTypeVar             (rule 28)

	mult           shift, and enter state 64
	gtype_2plus    shift, and enter state 65
	'::='          shift, and enter state 66

	genTypeVar     goto state 63

State 35

	patt -> constr .                                    (rule 14)

	constr         reduce using rule 14
	var            reduce using rule 14
	'='            reduce using rule 14
	'('            reduce using rule 14


State 36

	patt -> var .                                       (rule 13)

	constr         reduce using rule 13
	var            reduce using rule 13
	'='            reduce using rule 13
	'('            reduce using rule 13


State 37

	varDef -> var '=' . exp                             (rule 16)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	exp            goto state 62
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	colonSepExp    goto state 15

State 38

	patt -> '(' . constructor ')'                       (rule 15)

	constr         shift, and enter state 61

	constructor    goto state 60

State 39

	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	commaSepExp -> exp .                                (rule 57)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	plus           shift, and enter state 47
	minus          shift, and enter state 48
	mult           shift, and enter state 49
	div            shift, and enter state 50
	infix_var      shift, and enter state 51
	'('            shift, and enter state 52
	']'            reduce using rule 57
	','            reduce using rule 57
	':'            reduce using rule 59

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 40

	listLit -> '[' commaSepExp . ']'                    (rule 53)
	commaSepExp -> commaSepExp . ',' exp                (rule 56)

	']'            shift, and enter state 59
	','            shift, and enter state 57


State 41

	listLit -> '[' ']' .                                (rule 52)

	const          reduce using rule 52
	constr         reduce using rule 52
	var            reduce using rule 52
	plus           reduce using rule 52
	minus          reduce using rule 52
	mult           reduce using rule 52
	div            reduce using rule 52
	infix_var      reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	']'            reduce using rule 52
	';'            reduce using rule 52
	','            reduce using rule 52
	':'            reduce using rule 52
	'}'            reduce using rule 52
	%eof           reduce using rule 52


State 42

	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	term -> '(' exp . ')'                               (rule 46)
	commaSepExp -> exp .                                (rule 57)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	plus           shift, and enter state 47
	minus          shift, and enter state 48
	mult           shift, and enter state 49
	div            shift, and enter state 50
	infix_var      shift, and enter state 51
	'('            shift, and enter state 52
	')'            shift, and enter state 58
			(reduce using rule 57)

	','            reduce using rule 57
	':'            reduce using rule 59

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 43

	tupleLit -> '(' commaSepExp . ')'                   (rule 55)
	commaSepExp -> commaSepExp . ',' exp                (rule 56)

	')'            shift, and enter state 56
	','            shift, and enter state 57


State 44

	listColonLit -> colonSepExp ':' . exp               (rule 54)
	colonSepExp -> colonSepExp ':' . exp                (rule 58)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	exp            goto state 55
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	colonSepExp    goto state 15

State 45

	infixApp -> exp infixOp . exp                       (rule 37)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	exp            goto state 54
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	colonSepExp    goto state 15

State 46

	apply -> exp term .                                 (rule 36)

	const          reduce using rule 36
	constr         reduce using rule 36
	var            reduce using rule 36
	plus           reduce using rule 36
	minus          reduce using rule 36
	mult           reduce using rule 36
	div            reduce using rule 36
	infix_var      reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	']'            reduce using rule 36
	';'            reduce using rule 36
	','            reduce using rule 36
	':'            reduce using rule 36
	'}'            reduce using rule 36
	%eof           reduce using rule 36


State 47

	infixOp -> plus .                                   (rule 38)

	const          reduce using rule 38
	constr         reduce using rule 38
	var            reduce using rule 38
	'('            reduce using rule 38
	'['            reduce using rule 38


State 48

	infixOp -> minus .                                  (rule 39)

	const          reduce using rule 39
	constr         reduce using rule 39
	var            reduce using rule 39
	'('            reduce using rule 39
	'['            reduce using rule 39


State 49

	infixOp -> mult .                                   (rule 40)

	const          reduce using rule 40
	constr         reduce using rule 40
	var            reduce using rule 40
	'('            reduce using rule 40
	'['            reduce using rule 40


State 50

	infixOp -> div .                                    (rule 41)

	const          reduce using rule 41
	constr         reduce using rule 41
	var            reduce using rule 41
	'('            reduce using rule 41
	'['            reduce using rule 41


State 51

	infixOp -> infix_var .                              (rule 42)

	const          reduce using rule 42
	constr         reduce using rule 42
	var            reduce using rule 42
	'('            reduce using rule 42
	'['            reduce using rule 42


State 52

	term -> '(' . exp ')'                               (rule 46)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	exp            goto state 53
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	colonSepExp    goto state 15

State 53

	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	term -> '(' exp . ')'                               (rule 46)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	plus           shift, and enter state 47
	minus          shift, and enter state 48
	mult           shift, and enter state 49
	div            shift, and enter state 50
	infix_var      shift, and enter state 51
	'('            shift, and enter state 52
	')'            shift, and enter state 58
	':'            reduce using rule 59

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 54

	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	infixApp -> exp infixOp exp .                       (rule 37)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
			(reduce using rule 37)

	constr         shift, and enter state 17
			(reduce using rule 37)

	var            shift, and enter state 18
			(reduce using rule 37)

	plus           shift, and enter state 47
			(reduce using rule 37)

	minus          shift, and enter state 48
			(reduce using rule 37)

	mult           shift, and enter state 49
			(reduce using rule 37)

	div            shift, and enter state 50
			(reduce using rule 37)

	infix_var      shift, and enter state 51
			(reduce using rule 37)

	'('            shift, and enter state 52
			(reduce using rule 37)

	')'            reduce using rule 37
	']'            reduce using rule 37
	';'            reduce using rule 37
	','            reduce using rule 37
	':'            reduce using rule 59
			(reduce using rule 37)

	'}'            reduce using rule 37
	%eof           reduce using rule 37

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 55

	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	listColonLit -> colonSepExp ':' exp .               (rule 54)
	colonSepExp -> colonSepExp ':' exp .                (rule 58)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
			(reduce using rule 54)

	constr         shift, and enter state 17
			(reduce using rule 54)

	var            shift, and enter state 18
			(reduce using rule 54)

	plus           shift, and enter state 47
			(reduce using rule 54)

	minus          shift, and enter state 48
			(reduce using rule 54)

	mult           shift, and enter state 49
			(reduce using rule 54)

	div            shift, and enter state 50
			(reduce using rule 54)

	infix_var      shift, and enter state 51
			(reduce using rule 54)

	'('            shift, and enter state 52
			(reduce using rule 54)

	')'            reduce using rule 54
	']'            reduce using rule 54
	';'            reduce using rule 54
	','            reduce using rule 54
	':'            reduce using rule 59
			(reduce using rule 58)
			(reduce using rule 54)

	'}'            reduce using rule 54
	%eof           reduce using rule 54

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 56

	tupleLit -> '(' commaSepExp ')' .                   (rule 55)

	const          reduce using rule 55
	constr         reduce using rule 55
	var            reduce using rule 55
	plus           reduce using rule 55
	minus          reduce using rule 55
	mult           reduce using rule 55
	div            reduce using rule 55
	infix_var      reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	']'            reduce using rule 55
	';'            reduce using rule 55
	','            reduce using rule 55
	':'            reduce using rule 55
	'}'            reduce using rule 55
	%eof           reduce using rule 55


State 57

	commaSepExp -> commaSepExp ',' . exp                (rule 56)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	exp            goto state 78
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	colonSepExp    goto state 15

State 58

	term -> '(' exp ')' .                               (rule 46)

	const          reduce using rule 46
	constr         reduce using rule 46
	var            reduce using rule 46
	plus           reduce using rule 46
	minus          reduce using rule 46
	mult           reduce using rule 46
	div            reduce using rule 46
	infix_var      reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	']'            reduce using rule 46
	';'            reduce using rule 46
	','            reduce using rule 46
	':'            reduce using rule 46
	'}'            reduce using rule 46
	%eof           reduce using rule 46


State 59

	listLit -> '[' commaSepExp ']' .                    (rule 53)

	const          reduce using rule 53
	constr         reduce using rule 53
	var            reduce using rule 53
	plus           reduce using rule 53
	minus          reduce using rule 53
	mult           reduce using rule 53
	div            reduce using rule 53
	infix_var      reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	']'            reduce using rule 53
	';'            reduce using rule 53
	','            reduce using rule 53
	':'            reduce using rule 53
	'}'            reduce using rule 53
	%eof           reduce using rule 53


State 60

	patt -> '(' constructor . ')'                       (rule 15)

	')'            shift, and enter state 77


State 61

	constructor -> constr . constrTypes                 (rule 20)

	var            reduce using rule 22
	mult           reduce using rule 22
	gtype_2plus    reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	';'            reduce using rule 22
	'|'            reduce using rule 22
	%eof           reduce using rule 22

	constrTypes    goto state 76

State 62

	varDef -> var '=' exp .                             (rule 16)
	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	plus           shift, and enter state 47
	minus          shift, and enter state 48
	mult           shift, and enter state 49
	div            shift, and enter state 50
	infix_var      shift, and enter state 51
	'('            shift, and enter state 52
	';'            reduce using rule 16
	':'            reduce using rule 59
	%eof           reduce using rule 16

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 63

	genTypeVars -> genTypeVars genTypeVar .             (rule 28)

	mult           reduce using rule 28
	gtype_2plus    reduce using rule 28
	'::='          reduce using rule 28


State 64

	genTypeVar -> mult .                                (rule 30)

	var            reduce using rule 30
	mult           reduce using rule 30
	gtype_2plus    reduce using rule 30
	'::='          reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	';'            reduce using rule 30
	'|'            reduce using rule 30
	%eof           reduce using rule 30


State 65

	genTypeVar -> gtype_2plus .                         (rule 31)

	var            reduce using rule 31
	mult           reduce using rule 31
	gtype_2plus    reduce using rule 31
	'::='          reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	';'            reduce using rule 31
	'|'            reduce using rule 31
	%eof           reduce using rule 31


State 66

	typeDef -> var genTypeVars '::=' . constructors     (rule 17)

	constr         shift, and enter state 61

	constructors   goto state 74
	constructor    goto state 75

State 67

	funcParams -> funcParams patt .                     (rule 11)

	constr         reduce using rule 11
	var            reduce using rule 11
	'='            reduce using rule 11
	'('            reduce using rule 11


State 68

	funcDef -> var funcParams '=' . exp                 (rule 10)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	exp            goto state 73
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	colonSepExp    goto state 15

State 69

	program -> '{' exp '}' .                            (rule 3)

	%eof           reduce using rule 3


State 70

	program -> '{' defs ';' . exp '}'                   (rule 4)
	defs -> defs ';' . def                              (rule 5)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 31
	'('            shift, and enter state 19
	'['            shift, and enter state 20

	def            goto state 71
	funcDef        goto state 22
	varDef         goto state 23
	typeDef        goto state 24
	exp            goto state 72
	apply          goto state 6
	infixApp       goto state 7
	term           goto state 8
	variable       goto state 9
	constant       goto state 10
	specialLit     goto state 11
	listLit        goto state 12
	listColonLit   goto state 13
	tupleLit       goto state 14
	colonSepExp    goto state 15

State 71

	defs -> defs ';' def .                              (rule 5)

	';'            reduce using rule 5


State 72

	program -> '{' defs ';' exp . '}'                   (rule 4)
	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	plus           shift, and enter state 47
	minus          shift, and enter state 48
	mult           shift, and enter state 49
	div            shift, and enter state 50
	infix_var      shift, and enter state 51
	'('            shift, and enter state 52
	':'            reduce using rule 59
	'}'            shift, and enter state 84

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 73

	funcDef -> var funcParams '=' exp .                 (rule 10)
	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	plus           shift, and enter state 47
	minus          shift, and enter state 48
	mult           shift, and enter state 49
	div            shift, and enter state 50
	infix_var      shift, and enter state 51
	'('            shift, and enter state 52
	';'            reduce using rule 10
	':'            reduce using rule 59
	%eof           reduce using rule 10

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 74

	typeDef -> var genTypeVars '::=' constructors .     (rule 17)
	constructors -> constructors . '|' constructor      (rule 18)

	';'            reduce using rule 17
	'|'            shift, and enter state 83
	%eof           reduce using rule 17


State 75

	constructors -> constructor .                       (rule 19)

	';'            reduce using rule 19
	'|'            reduce using rule 19
	%eof           reduce using rule 19


State 76

	constructor -> constr constrTypes .                 (rule 20)
	constrTypes -> constrTypes . constrArg              (rule 21)

	var            shift, and enter state 81
	mult           shift, and enter state 64
	gtype_2plus    shift, and enter state 65
	'('            shift, and enter state 82
	')'            reduce using rule 20
	';'            reduce using rule 20
	'|'            reduce using rule 20
	%eof           reduce using rule 20

	constrArg      goto state 79
	genTypeVar     goto state 80

State 77

	patt -> '(' constructor ')' .                       (rule 15)

	constr         reduce using rule 15
	var            reduce using rule 15
	'='            reduce using rule 15
	'('            reduce using rule 15


State 78

	apply -> exp . term                                 (rule 36)
	infixApp -> exp . infixOp exp                       (rule 37)
	commaSepExp -> commaSepExp ',' exp .                (rule 56)
	colonSepExp -> exp .                                (rule 59)

	const          shift, and enter state 16
	constr         shift, and enter state 17
	var            shift, and enter state 18
	plus           shift, and enter state 47
	minus          shift, and enter state 48
	mult           shift, and enter state 49
	div            shift, and enter state 50
	infix_var      shift, and enter state 51
	'('            shift, and enter state 52
	')'            reduce using rule 56
	']'            reduce using rule 56
	','            reduce using rule 56
	':'            reduce using rule 59

	infixOp        goto state 45
	term           goto state 46
	variable       goto state 9
	constant       goto state 10

State 79

	constrTypes -> constrTypes constrArg .              (rule 21)

	var            reduce using rule 21
	mult           reduce using rule 21
	gtype_2plus    reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	';'            reduce using rule 21
	'|'            reduce using rule 21
	%eof           reduce using rule 21


State 80

	constrArg -> genTypeVar .                           (rule 24)

	var            reduce using rule 24
	mult           reduce using rule 24
	gtype_2plus    reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	';'            reduce using rule 24
	'|'            reduce using rule 24
	%eof           reduce using rule 24


State 81

	constrArg -> var .                                  (rule 23)

	var            reduce using rule 23
	mult           reduce using rule 23
	gtype_2plus    reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	';'            reduce using rule 23
	'|'            reduce using rule 23
	%eof           reduce using rule 23


State 82

	constrArg -> '(' . constrArgs ')'                   (rule 25)

	var            reduce using rule 27
	mult           reduce using rule 27
	gtype_2plus    reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27

	constrArgs     goto state 86

State 83

	constructors -> constructors '|' . constructor      (rule 18)

	constr         shift, and enter state 61

	constructor    goto state 85

State 84

	program -> '{' defs ';' exp '}' .                   (rule 4)

	%eof           reduce using rule 4


State 85

	constructors -> constructors '|' constructor .      (rule 18)

	';'            reduce using rule 18
	'|'            reduce using rule 18
	%eof           reduce using rule 18


State 86

	constrArg -> '(' constrArgs . ')'                   (rule 25)
	constrArgs -> constrArgs . constrArg                (rule 26)

	var            shift, and enter state 81
	mult           shift, and enter state 64
	gtype_2plus    shift, and enter state 65
	'('            shift, and enter state 82
	')'            shift, and enter state 88

	constrArg      goto state 87
	genTypeVar     goto state 80

State 87

	constrArgs -> constrArgs constrArg .                (rule 26)

	var            reduce using rule 26
	mult           reduce using rule 26
	gtype_2plus    reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26


State 88

	constrArg -> '(' constrArgs ')' .                   (rule 25)

	var            reduce using rule 25
	mult           reduce using rule 25
	gtype_2plus    reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	';'            reduce using rule 25
	'|'            reduce using rule 25
	%eof           reduce using rule 25


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 60
Number of terminals: 21
Number of non-terminals: 31
Number of states: 89
